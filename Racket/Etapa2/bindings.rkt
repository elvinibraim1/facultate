#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 2804 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 17 3 40 #"; ignora\310\233i urm\304\203toarele linii de cod..."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 3 #") ("
0 0 14 3 5 #"foldr"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"magic-number"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 2 #"42"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"magic-segment"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"get-start-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"get-end-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->list"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"c"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 3 #") ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\0"
0 0 25 3 5 #"))) ("
0 0 14 3 12 #"string->list"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 17 3 83
(5
 #"; c\xC3\xA2te exerci\xC8\x9Bii la care s-au \xC3\xAEntors rezultate d"
 #"efault s\xC4\x83 fie ar\xC4\x83tate detaliat"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 6 #"testul"
0 0 25 3 1 #" "
0 0 14 3 7 #"testele"
0 0 25 3 1 #" "
0 0 14 3 6 #"trecut"
0 0 25 3 1 #" "
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 3 #")) "
0 0 17 3 142
(6
 #"; variante: '(exerci\xC8\x9Biul exerci\xC8\x9Biile rezolvat exerci"
 #"\xC8\x9Biul) sau '(testul testele trecut exerci\xC8\x9Biul) sau '(tas"
 #"k taskurile rezolvat capitolul)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #" () "
0 0 14 3 14 #"your-code-here"
0 0 25 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 15 3 14 #"default-result"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 25 3 5 #"))) ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"separator"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"punct"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"string"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"string"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"string"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"exerci\310\233ii"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"total"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"()) ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"n-exercs"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"()) ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"ex"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 3 #"sep"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #") "
0 0 14 3 3 #"all"
0 0 25 3 5 #"))) ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 14 3 2 #"ex"
0 0 25 3 3 #") ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sunt"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 8 #"n-exercs"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"s-a"
0 0 25 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 1 #"L"
0 0 25 3 3 #") ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 4 #"))) "
0 0 14 3 1 #"L"
0 0 25 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 25 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"p-n-ex"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"[~a]\""
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 2 #" ("
0 0 14 3 6 #"cadddr"
0 0 25 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"/\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 8 #"n-exercs"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"n-ex"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"epart"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 14 3 4 #"pfix"
0 0 25 3 1 #" "
0 0 14 3 4 #"full"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"s-a"
0 0 25 3 1 #" "
0 0 14 3 4 #"pfix"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"full"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"s-a"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\" \""
0 0 25 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 4 #"full"
0 0 25 3 3 #")) "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 5 #"))) ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 4 #"full"
0 0 25 3 3 #")) "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"s-a"
0 0 25 3 1 #" "
0 0 14 3 4 #"pfix"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"full"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"s-a"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\" \""
0 0 25 3 4 #")) ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"whengood"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" [("
0 0 14 3 3 #"pts"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 25 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 6 #")))] ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 25 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"+~v: \""
0 0 25 3 1 #" "
0 0 14 3 3 #"pts"
0 0 25 3 3 #") ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"~a[OK] \""
0 0 25 3 2 #" ("
0 0 14 3 6 #"p-n-ex"
0 0 25 3 5 #"))) ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 5 #"epart"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 19 3 10 #"\"rezolvat\""
0 0 25 3 3 #") ("
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 5 #"epart"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 19 3 13 #"\"rezolvat: +\""
0 0 25 3 1 #" "
0 0 14 3 3 #"pts"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 3 #"pts"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"punct"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"puncte"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 5 #"total"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"total"
0 0 25 3 1 #" "
0 0 14 3 3 #"pts"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"whenbad"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 14 3 5 #"expcd"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 25 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"epart"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 15 3 15 #"default-returns"
0 0 25 3 5 #"))) ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 2 #") "
0 0 14 3 13 #"show-defaults"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"bad-res"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 14 3 5 #"expcd"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"bad-res"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 14 3 5 #"expcd"
0 0 25 3 1 #" "
0 0 14 3 3 #"msg"
0 0 25 3 3 #") ("
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"+0.0:\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"~a[--]\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"p-n-ex"
0 0 25 3 5 #"))) ("
0 0 14 3 5 #"epart"
0 0 25 3 1 #" "
0 0 14 3 3 #"ep%"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"la \""
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 10 #"rezultatul"
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"~v\""
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 2 #") "
0 0 14 3 3 #"msg"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"expcd"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"////"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"~v\""
0 0 25 3 1 #" "
0 0 14 3 5 #"expcd"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"check-conds"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 1 #"r"
0 0 25 3 3 #" (("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 2 #") "
0 0 14 3 3 #"gvn"
0 0 25 3 5 #")]) ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #") ("
0 0 14 3 11 #"check-conds"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"whenbad"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"gvn"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"////"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 19 3 29 #"\"nu \303\256ndepline\310\231te condi\310\233ia\""
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 14 3 4 #"part"
0 0 25 3 1 #" "
0 0 14 3 3 #"per"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 9 #"main-test"
0 0 25 3 1 #" "
0 0 14 3 8 #"expected"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 3 #") ("
0 0 15 3 4 #"let*"
0 0 25 3 3 #" (["
0 0 14 3 1 #"e"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 25 3 1 #" "
0 0 14 3 4 #"part"
0 0 25 3 1 #" "
0 0 14 3 3 #"per"
0 0 25 3 4 #")] ["
0 0 14 3 2 #"p?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"main-test"
0 0 25 3 5 #"))] ["
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 2 #"p?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"main-test"
0 0 25 3 2 #") "
0 0 14 3 8 #"identity"
0 0 25 3 4 #")] ["
0 0 14 3 1 #"t"
0 0 25 3 3 #" (("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 2 #"p?"
0 0 25 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 2 #") "
0 0 14 3 9 #"main-test"
0 0 25 3 4 #")] ["
0 0 14 3 1 #"m"
0 0 25 3 3 #" (("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 2 #"p?"
0 0 25 3 1 #" "
0 0 14 3 4 #"cddr"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 2 #") "
0 0 14 3 9 #"main-test"
0 0 25 3 5 #")]) ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #" ("
0 0 14 3 11 #"check-conds"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 2 #") "
0 0 14 3 8 #"expected"
0 0 25 3 3 #") ("
0 0 14 3 8 #"whengood"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 7 #"whenbad"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 2 #") "
0 0 14 3 8 #"expected"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"check"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 9 #"main-test"
0 0 25 3 1 #" "
0 0 14 3 8 #"expected"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 9 #"main-test"
0 0 25 3 1 #" "
0 0 14 3 8 #"expected"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"difer\304\203 de cel a\310\231teptat\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"in"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 19 3 43 #"\"nu se afl\304\203 printre variantele a\310\231teptate\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"same-set-as"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 12 #"list->seteqv"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 5 #")))) "
0 0 19 3 30 #"\"nu este aceea\310\231i mul\310\233ime cu\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"same-elements-as"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 6 #"))) (("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 11 #"same-set-as"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))) "
0 0 19 3 32 #"\"nu sunt acelea\310\231i rezultate cu\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sumar"
0 0 25 3 3 #") ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 19 3 32 #"\"... rezultatul implicit dat la\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 25 3 3 #") ("
0 0 14 3 7 #"reverse"
0 0 25 3 1 #" "
0 0 15 3 15 #"default-returns"
0 0 25 3 5 #"))) ("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 8 #"nopoints"
0 0 25 3 3 #") ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"total:"
0 0 25 3 1 #" "
0 0 14 3 5 #"total"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"puncte"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"mark-helper"
0 0 25 3 3 #") ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 40 #"\"---~nEx  puncte    Total p\303\242n\304\203 aici~n\""
0 0 25 3 3 #") ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"e-p"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"p"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"e-p"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 3 #"e-p"
0 0 25 3 2 #") "
0 0 19 3 19 #"\"puncte. total 1 -\""
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"e-p"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 3 #"e-p"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 3 #"e-p"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 17 #"; ...p\303\242n\304\203 aici."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";; Acest laborator are ca scop familiarizarea cu leg\304\203rile"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";; din Racket \310\231i restul limbajelor din familia LISP."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 77
(7
 #";; Cel mai important scop al acestui laborator este s\xC4\x83 v\xC4"
 #"\x83 arate cum pute\xC8\x9Bi"
) 0 0 25 29 1 #"\n"
0 0 17 3 71
(8
 #";; face codul lizibil, \xC8\x9Bine\xC8\x9Bi minte asta c\xC3\xA2nd re"
 #"zolva\xC8\x9Bi, dac\xC4\x83 a\xC8\x9Bi"
) 0 0 25 29 1 #"\n"
0 0 17 3 64
(9
 #";; folosit let-uri dar codul \xC3\xAEnc\xC4\x83 e greu de \xC3\xAEn"
 #"\xC8\x9Beles probabil"
) 0 0 25 29 1 #"\n"
0 0 17 3 49
(10
 #";; e timpul s\xC4\x83 reg\xC3\xA2ndi\xC8\x9Bi logica exerci\xC8\x9Biu"
 #"lui."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 80
(11
 #";; Abilitatea de a scrie cod lizibil este critic\xC4\x83 pentru un pr"
 #"ogramator \xC8\x99i v\xC4\x83"
) 0 0 25 29 1 #"\n"
0 0 17 3 89
(12
 #";; va influen\xC8\x9Ba major cariera. Nu v\xC4\x83 demoraliza\xC8\x9B"
 #"i dac\xC4\x83 \xC3\xAEnc\xC4\x83 nu sunte\xC8\x9Bi pricepu\xC8\x9Bi,"
) 0 0 25 29 1 #"\n"
0 0 17 3 69
(13
 #";; nu exist\xC4\x83 o re\xC8\x9Bet\xC4\x83 universal\xC4\x83, aceast"
 #"\xC4\x83 abilitate se dezvolt\xC4\x83"
) 0 0 25 29 1 #"\n"
0 0 17 3 42 #";; de-a lungul anilor de scris cod zilnic."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"sunt"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 10 #"exerci\310\233ii"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 64
(14
 #";; Func\xC8\x9Bia compute-square-area prime\xC8\x99te ca argument o f"
 #"unc\xC8\x9Bie"
) 0 0 25 29 1 #"\n"
0 0 17 3 71
(15
 #";; nular\xC4\x83 ce returneaz\xC4\x83 un num\xC4\x83r, reprezent\xC3"
 #"\xA2nd latura unui p\xC4\x83trat;"
) 0 0 25 29 1 #"\n"
0 0 17 3 65
(16
 #";; compute-square-area trebuie s\xC4\x83 calculeze aria acelui p\xC4"
 #"\x83trat."
) 0 0 25 29 1 #"\n"
0 0 17 3 54
(17
 #";; Restric\xC8\x9Bii: Aplica\xC8\x9Bi get-length o singur\xC4\x83 dat"
 #"\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 45 #";;             Nu pute\310\233i folosi `exp`/`expt`"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";; compute-square-area:: func\310\233ie -> real"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 1 #" "
0 0 14 3 10 #"get-length"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 10 #"get-length"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"length"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 12 #"num-of-calls"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 5 #" () ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 1 #" "
0 0 14 3 12 #"magic-number"
0 0 25 3 2 #") "
0 0 14 3 11 #"count-magic"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" () "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 4 #"when"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 12 #"num-of-calls"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" () "
0 0 22 3 4 #"3932"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 8 #"15460624"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" () "
0 0 22 3 4 #"2788"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 7 #"7772944"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-square-area"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" () "
0 0 22 3 8 #"198.2522"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 17 #"39303.93480483999"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 61
(18
 #";; Func\xC8\x9Bia compute-length prime\xC8\x99te ca argumente 3 func"
 #"\xC8\x9Bii:"
) 0 0 25 29 1 #"\n"
0 0 17 3 68
(19
 #";;  - get-line-segment => nular\xC4\x83, \xC3\xAEntoarce un segment d"
 #"e dreapt\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 61
(20
 #";;  - get-start-point => prime\xC8\x99te un segment de dreapt\xC4\x83"
 #" \xC8\x99i"
) 0 0 25 29 1 #"\n"
0 0 17 3 70
(21
 #";;                       \xC3\xAEntoarce punctul din care segmentul "
 #"\xC3\xAEncepe."
) 0 0 25 29 1 #"\n"
0 0 17 3 59
(22
 #";;  - get-end-point => prime\xC8\x99te un segment de dreapt\xC4\x83 "
 #"\xC8\x99i"
) 0 0 25 29 1 #"\n"
0 0 17 3 74
(23
 #";;                       \xC3\xAEntoarce punctul \xC3\xAEn care segme"
 #"ntul se termin\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";; Un punct este reprezentat printr-o pereche de numere."
0 0 25 29 1 #"\n"
0 0 17 3 70
(24
 #";; Un segment de dreapt\xC4\x83 este reprezentat printr-o pereche de "
 #"puncte."
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 17 3 73
(25
 #";; compute-length trebuie s\xC4\x83 calculeze lungimea segmentului de"
 #" dreapt\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 66
(26
 #";; (distan\xC8\x9Ba dintre punctul de \xC3\xAEnceput \xC8\x99i punctu"
 #"l de sf\xC3\xA2r\xC8\x99it)"
) 0 0 25 29 1 #"\n"
0 0 17 3 92
(27
 #";; Restric\xC8\x9Bii: Fiecare func\xC8\x9Bie primit\xC4\x83 drept arg"
 #"ument trebuie aplicat\xC4\x83 o singur\xC4\x83 dat\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 58
(28
 #";; compute-length:: func\xC8\x9Bie x func\xC8\x9Bie x func\xC8\x9Bie "
 #"-> real"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"compute-length"
0 0 25 3 1 #" "
0 0 14 3 16 #"get-line-segment"
0 0 25 3 1 #" "
0 0 14 3 15 #"get-start-point"
0 0 25 3 1 #" "
0 0 14 3 13 #"get-end-point"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 25 3 3 #" (("
0 0 14 3 7 #"segment"
0 0 25 3 2 #" ("
0 0 14 3 16 #"get-line-segment"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 5 #"start"
0 0 25 3 2 #" ("
0 0 14 3 15 #"get-start-point"
0 0 25 3 1 #" "
0 0 14 3 7 #"segment"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"stop"
0 0 25 3 2 #" ("
0 0 14 3 13 #"get-end-point"
0 0 25 3 1 #" "
0 0 14 3 7 #"segment"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"x1"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"start"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"y1"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"start"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"x2"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"stop"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"y2"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"stop"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"sqrt"
0 0 25 3 1 #"("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"x1"
0 0 25 3 1 #" "
0 0 14 3 2 #"x2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"x1"
0 0 25 3 1 #" "
0 0 14 3 2 #"x2"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"y1"
0 0 25 3 1 #" "
0 0 14 3 2 #"y2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 2 #"y1"
0 0 25 3 1 #" "
0 0 14 3 2 #"y2"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 12 #"num-of-calls"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 5 #" () ("
0 0 14 3 14 #"compute-length"
0 0 25 3 1 #" "
0 0 14 3 13 #"magic-segment"
0 0 25 3 1 #" "
0 0 14 3 15 #"get-start-point"
0 0 25 3 1 #" "
0 0 14 3 13 #"get-end-point"
0 0 25 3 2 #") "
0 0 14 3 11 #"count-magic"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/5"
0 0 25 3 1 #" "
0 0 14 3 12 #"num-of-calls"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 10 #"fn-binding"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 14 #"compute-length"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 4 #" () "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 15 #"get-start-point"
0 0 25 3 1 #" "
0 0 14 3 13 #"get-end-point"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/5"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fn-binding"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/5"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fn-binding"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"94"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 3 #"197"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 3 #"205"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/5"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fn-binding"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"23"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"54"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 4 #"7632"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 4 #"5457"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 17 #"9332.164272021791"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/5"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fn-binding"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"658"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 3 #"665"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 5 #"32343"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 5 #"31246"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 17 #"44035.63086864999"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 11 #"count-magic"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 57
(29
 #";; Defini\xC8\x9Bi func\xC8\x9Bia distance care calculeaz\xC4\x83 dis"
 #"tan\xC8\x9Ba"
) 0 0 25 29 1 #"\n"
0 0 17 3 62
(30
 #";; dintre dou\xC4\x83 puncte baz\xC3\xA2ndu-se pe func\xC8\x9Bia comp"
 #"ute-length."
) 0 0 25 29 1 #"\n"
0 0 17 3 58
(31
 #";; Identifica\xC8\x9Bi \xC3\xAEnchiderea func\xC8\x9Bional\xC4\x83 "
 #"\xC8\x99i ar\xC4\x83ta\xC8\x9Bi-o"
) 0 0 25 29 1 #"\n"
0 0 17 3 53
#";; asistentului pentru a v\304\203 puncta acest exerci\310\233iu."
0 0 25 29 1 #"\n"
0 0 17 3 39 #";; distance:: pereche x pereche -> real"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"compute-length"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 5 #" () ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")) "
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"check"
0 0 25 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 3 #")  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";; Fie f(x) o func\310\233ie oarecare,"
0 0 25 29 1 #"\n"
0 0 17 3 63
(32
 #";; Calcula\xC8\x9Bi valorile func\xC8\x9Biei f(x), a < x < b cu pasul"
 #" step."
) 0 0 25 29 1 #"\n"
0 0 17 3 36 #";; Restric\310\233ii: Folosi\310\233i named let."
0 0 25 29 1 #"\n"
0 0 17 3 58
#";;             Nu apela\310\233i recursiv `compute-f-with-step`."
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;             Nu folosi\310\233i functionale."
0 0 25 29 1 #"\n"
0 0 17 3 68
(33
 #";; compute-f-with-step:: func\xC8\x9Bie x num\xC4\x83r x num\xC4\x83r"
 #" x num\xC4\x83r -> list"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"compute-f-with-step"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 4 #"step"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"iter"
0 0 25 3 3 #" (("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 15 #"))             "
0 0 17 3 63
(34
 #"; parametrul b este ini\xC8\x9Bializat cu valoarea b, result cu '()  "
) 0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 32 #"()                              "
0 0 17 3 73
(35
 #"; aici e vizibil b-ul parametru pentru iter, nu b-ul func\xC8\x9Biei "
 #"interval  "
) 0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"iter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 4 #"step"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"compute-f-with-step"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"compute-f-with-step"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 67
(36
 #";; Func\xC8\x9Bia num-concat prime\xC8\x99te dou\xC4\x83 numere \xC8"
 #"\x99i le concateneaz\xC4\x83."
) 0 0 25 29 1 #"\n"
0 0 17 3 6 #";; ex:"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";;   > (num-concat 33 22)"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";;   3322"
0 0 25 29 1 #"\n"
0 0 17 3 62
(37
 #";; Suprascrie\xC8\x9Bi procedura `+` doar \xC3\xAEn contextul local p"
 #"entru"
) 0 0 25 29 1 #"\n"
0 0 17 3 46 #";; a realiza concatenarea dintre dou\304\203 numere."
0 0 25 29 1 #"\n"
0 0 17 3 55
#";; Hint: `string-append` concateneaz\304\203 dou\304\203 string-uri"
0 0 25 29 1 #"\n"
0 0 17 3 72
(38
 #";; Hint: Pute\xC8\x9Bi folosi func\xC8\x9Biile `number->string` \xC8"
 #"\x99i `string->number`"
) 0 0 25 29 1 #"\n"
0 0 17 3 41
#";; num-concat:: num\304\203r x num\304\203r -> num\304\203r"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"num-concat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 17 3 32 #";; Nu \310\231terge\310\233i aceast\304\203 linie."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 10 #"num-concat"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 10 #"num-concat"
0 0 25 3 1 #" "
0 0 22 3 2 #"33"
0 0 25 3 1 #" "
0 0 22 3 3 #"674"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 5 #"33674"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 77
(39
 #";; Defini\xC8\x9Bi func\xC8\x9Bia compute-perimeter care prime\xC8"
 #"\x99te un poligon reprezentat"
) 0 0 25 29 1 #"\n"
0 0 17 3 65
(40
 #";; printr-o list\xC4\x83 de puncte \xC8\x99i calculeaz\xC4\x83 perime"
 #"trul acestuia."
) 0 0 25 29 1 #"\n"
0 0 17 3 106
(41
 #";; Aten\xC8\x9Bie: Nu ave\xC8\x9Bi voie s\xC4\x83 defini\xC8\x9Bi fun"
 #"c\xC8\x9Bii ajut\xC4\x83toare \xC3\xAEn exteriorul func\xC8\x9Biei co"
 #"mpute-perimeter."
) 0 0 25 29 1 #"\n"
0 0 17 3 54
(42
 #";;          Nu ave\xC8\x9Bi voie s\xC4\x83 folosi\xC8\x9Bi func\xC8"
 #"\x9Bionale."
) 0 0 25 29 1 #"\n"
0 0 17 3 43
#";; Hint: Folosi\310\233i-v\304\203 de func\310\233ia distance"
0 0 25 29 1 #"\n"
0 0 17 3 93
(43
 #";; Restric\xC8\x9Bii: Nu defini\xC8\x9Bi func\xC8\x9Bii ajut\xC4\x83t"
 #"oare \xC3\xAEn exteriorul func\xC8\x9Biei compute-perimeter."
) 0 0 25 29 1 #"\n"
0 0 17 3 41 #";;             Nu folosi\310\233i func\310\233ionale."
0 0 25 29 1 #"\n"
0 0 17 3 50
#";; compute-perimeter:: list\304\203 de perechi -> num\304\203r"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"compute-perimeter"
0 0 25 3 1 #" "
0 0 14 3 6 #"points"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 17 #"compute-perimeter"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 17 #"compute-perimeter"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 17 #"compute-perimeter"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"43"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 2 #"43"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 18 #"132.01993654258658"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 17 #"compute-perimeter"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 18 #"15.727968770336455"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";; Se dau 3 secven\310\233e separate printr-un separator."
0 0 25 29 1 #"\n"
0 0 17 3 53
(44
 #";; Defini\xC8\x9Bi func\xC8\x9Bia `3-sequence-max` care g\xC4\x83se"
 #"\xC8\x99te"
) 0 0 25 29 1 #"\n"
0 0 17 3 36 #";; suma secven\310\233ei de sum\304\203 maxim\304\203."
0 0 25 29 1 #"\n"
0 0 17 3 6 #";; ex:"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";; (1 2 3 0 3 5 4 0 5 200) cu separatorul 0"
0 0 25 29 1 #"\n"
0 0 17 3 41
#";; => secven\310\233a de sum\304\203 maxim\304\203 este 205"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";; Restric\310\233ii: Nu folosi\310\233i fold/apply."
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;             Folosi\310\233i let-values/let*-values."
0 0 25 29 1 #"\n"
0 0 17 3 38 #";; Hint:: Uita\310\233i-v\304\203 peste splitf-at."
0 0 25 29 1 #"\n"
0 0 17 3 54
#";; 3-sequence-max:: list\304\203 de numere x orice -> num\304\203r"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"3-sequence-max"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 1 #" "
0 0 14 3 9 #"separator"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"3-sequence-max"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"3-sequence-max"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 3 #"105"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"54"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 3 #"170"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 74
(45
 #";; Redefini\xC8\x9Bi func\xC8\x9Bia num-concat pentru a func\xC8\x9Bi"
 #"ona pe oric\xC3\xA2te numere."
) 0 0 25 29 1 #"\n"
0 0 17 3 41 #";; Restric\310\233ii: Nu folosi\310\233i `num-concat`"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";;             Folosi\310\233i func\310\233ionale."
0 0 25 29 1 #"\n"
0 0 17 3 63
(46
 #";; \xC3\x8En\xC8\x9Belege\xC8\x9Bi cum v\xC4\x83 poate ajuta programa"
 #"rea func\xC8\x9Bional\xC4\x83?"
) 0 0 25 29 1 #"\n"
0 0 17 3 72
(47
 #";; Cum ar ar\xC4\x83ta o suprascriere echivalent\xC4\x83 \xC3\xAEntr-"
 #"un limbaj procedural?"
) 0 0 25 29 1 #"\n"
0 0 17 3 74
(48
 #";; Care implementare este mai straightforward, este mai u\xC8\x99or d"
 #"e \xC3\xAEn\xC8\x9Beles"
) 0 0 25 29 1 #"\n"
0 0 17 3 42
#";; \310\231i las\304\203 loc pentru mai pu\310\233ine erori?"
0 0 25 29 1 #"\n"
0 0 17 3 47
#";; list-num-concat:: list\304\203 de numere -> num\304\203r"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"list-num-concat"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 78
(49
 #";; Defini\xC8\x9Bi func\xC8\x9Bia care g\xC4\x83se\xC8\x99te toate su"
 #"fixele posibile pentru un num\xC4\x83r."
) 0 0 25 29 1 #"\n"
0 0 17 3 6 #";; ex:"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";; (find-all-suffixes 123) => '(123 23 3)"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";; Restric\310\233ii: Folosi\310\233i named let."
0 0 25 29 1 #"\n"
0 0 17 3 74
(50
 #";;             Exist\xC4\x83 deja definit\xC4\x83 \xC3\xAEn laborator"
 #" func\xC8\x9Bia number->list."
) 0 0 25 29 1 #"\n"
0 0 17 3 49
#";; find-all-suffixes:: num\304\203r -> list\304\203 de numere"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"find-all-suffixes"
0 0 25 3 1 #" "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 17 #"find-all-suffixes"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 22 3 3 #"234"
0 0 25 3 1 #" "
0 0 22 3 2 #"34"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 17 #"find-all-suffixes"
0 0 25 3 1 #" "
0 0 22 3 11 #"56789462782"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 11 #"56789462782"
0 0 25 3 1 #" "
0 0 22 3 10 #"6789462782"
0 0 25 3 1 #" "
0 0 22 3 9 #"789462782"
0 0 25 3 1 #" "
0 0 22 3 8 #"89462782"
0 0 25 3 1 #" "
0 0 22 3 7 #"9462782"
0 0 25 3 1 #" "
0 0 22 3 6 #"462782"
0 0 25 3 1 #" "
0 0 22 3 5 #"62782"
0 0 25 3 1 #" "
0 0 22 3 4 #"2782"
0 0 25 3 1 #" "
0 0 22 3 3 #"782"
0 0 25 3 1 #" "
0 0 22 3 2 #"82"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 70
(51
 #";; Automatele finite sunt un formalism matematic util pentru a descri"
 #"e"
) 0 0 25 29 1 #"\n"
0 0 17 3 79
(52
 #";; \xC3\xAEn mod abstract (matematic) procese, sunt folosite des \xC3"
 #"\xAEn computer science"
) 0 0 25 29 1 #"\n"
0 0 17 3 75
(53
 #";; \xC8\x99i le ve\xC8\x9Bi \xC3\xAEnt\xC3\xA2lni (le-a\xC8\x9Bi \xC3"
 #"\xAEnt\xC3\xA2lnit) la CN, LFA \xC8\x99i alte materii."
) 0 0 25 29 1 #"\n"
0 0 17 3 72
(54
 #";; \xC3\x8En acest exerci\xC8\x9Biu vom reprezenta un automat finit p"
 #"rin 3 elemente:"
) 0 0 25 29 1 #"\n"
0 0 17 3 70
(55
 #";;    initial-state => o stare ini\xC8\x9Bial\xC4\x83 din care automa"
 #"tul porne\xC8\x99te"
) 0 0 25 29 1 #"\n"
0 0 17 3 67
(56
 #";;    final-state => o stare final\xC4\x83 \xC3\xAEn care automatul s"
 #"e opre\xC8\x99te"
) 0 0 25 29 1 #"\n"
0 0 17 3 84
(57
 #";;    next => o func\xC8\x9Bie care prime\xC8\x99te o stare \xC8\x99i"
 #" decide care e urm\xC4\x83toarea stare."
) 0 0 25 29 1 #"\n"
0 0 17 3 48
#";; Restric\310\233ii: Trebuie s\304\203 folosi\310\233i named let."
0 0 25 29 1 #"\n"
0 0 17 3 53
(58
 #";; run:: stare x stare x func\xC8\x9Bie -> list\xC4\x83 de st\xC4\x83"
 #"ri"
) 0 0 25 29 1 #"\n"
0 0 17 3 69
(59
 #";; Func\xC8\x9Bia \xC3\xAEntoarce o list\xC4\x83 ce cuprinde toate st"
 #"\xC4\x83rile automatului"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 14 3 13 #"initial-state"
0 0 25 3 1 #" "
0 0 14 3 11 #"final-state"
0 0 25 3 1 #" "
0 0 14 3 4 #"next"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 2 #" ("
0 0 14 3 5 #"range"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 4 #"sub1"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"range"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 25 3 3 #")) "
0 0 14 3 2 #"is"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 5 #"even?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"range"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/4"
0 0 25 3 2 #" ("
0 0 14 3 3 #"run"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 5 #"65536"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))) "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 22 3 3 #"256"
0 0 25 3 1 #" "
0 0 22 3 5 #"65536"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 25 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 75
(60
 #";; Folosindu-v\xC4\x83 de exerci\xC5\xA3iile anterioare genera\xC8"
 #"\x9Bi num\xC4\x83rul de lungime k"
) 0 0 25 29 1 #"\n"
0 0 17 3 61
(61
 #";; pentru care orice cifr\xC4\x83 de pe pozi\xC8\x9Bia i se poate ob"
 #"\xC8\x9Bine"
) 0 0 25 29 1 #"\n"
0 0 17 3 26 #";; folosind formula i*k+x."
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; Restric\310\233ii: Folosi\310\233i let."
0 0 25 29 1 #"\n"
0 0 17 3 49
#";; generate-number:: \303\256ntreg x \303\256ntreg -> \303\256ntreg"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"generate-number"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"generate-number"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 3 #"258"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"check%"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"generate-number"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 22 3 3 #"369"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"sumar"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
